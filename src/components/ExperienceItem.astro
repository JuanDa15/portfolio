---
import TechnologyBadget from './TechnologyBadget.astro';
import { TAGS } from '../constants';
import type { TagName } from '../types';
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from '@/i18n/utils';

interface Props {
  id: number;
  title: string;
  description: string;
  date: string;
  company: string;
  tags: TagName[];
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const tp = useTranslatedPath(lang);

const { title, description, date, company, tags, id } = Astro.props;
---

<li class='mb-10 ms-5'>
  <div
    class={`
      absolute 
      size-3 
      mt-1.5 -start-1.5
    bg-slate-500 dark:bg-lavender rounded-full border
    `}
  >
  </div>
  <time
    class={`
      mb-1 
      text-xs md:text-sm font-normal leading-none 
     text-slate-800/60 dark:text-lavender/60
    `}
    transition:name={`experience-date-${id}`}
  >
    {date}
  </time>
  <h3
    class={`
      text-base md:text-xl font-bold text-electric-purple
    `}
    transition:name={`experience-title-${id}`}
  >
    {title}
  </h3>
  <h2
    class={`
      text-sm md:text-base font-semibold text-slate-800/50 dark:text-lavender/80
    `}
    transition:name={`experience-company-${id}`}
  >
    {company}
  </h2>
  <p
    class={`
      my-4
      text-base 
      font-normal text-slate-500/80 dark:text-white/80 text-pretty
    `}
  >
    {description}
  </p>
  <div class='mb-4 flex flex-row gap-x-2 gap-y-1 flex-wrap'>
    {
      tags.map((tag) => {
        const { class: className, name, icon: Icon } = TAGS[tag];

        return (
          <TechnologyBadget class={`${className} text-xs`}>
            <Icon class={`size-5 md:size-6`} /> {name}
          </TechnologyBadget>
        );
      })
    }
  </div>

  {
    (
      <a
        href={`${tp('/experience')}/${id}`}
        class={`
          inline-flex items-center 
          px-4 py-2 
          text-sm font-medium 
          text-slate-400 dark:text-slate-400 
          bg-slate-700/5 dark:bg-lavender/5 
          hover:text-deep-purple hover:border-deep-purple hover:bg-deep-purple/20
          dark:hover:text-deep-purple dark:hover:border-deep-purple dark:hover:bg-deep-purple/20
          border border-slate-400 dark:border-gray-600
          rounded-lg   
          focus:z-10 focus:ring-4 focus:outline-none focus:ring-electric-purple/20  focus:text-deep-purple
          transition-colors
        `}
      >
        {t('btn.more')}{' '}
        <svg
          class='w-3 h-3 ms-2 rtl:rotate-180'
          aria-hidden='true'
          xmlns='http://www.w3.org/2000/svg'
          fill='none'
          viewBox='0 0 14 10'
        >
          <path
            stroke='currentColor'
            stroke-linecap='round'
            stroke-linejoin='round'
            stroke-width='2'
            d='M1 5h12m0 0L9 1m4 4L9 9'
          />
        </svg>
      </a>
    )
  }
</li>
