---
import ComputerIcon from '@/icons/ComputerIcon.astro';
import MoonIcon from '@/icons/MoonIcon.astro';
import SunIcon from '@/icons/SunIcon.astro';
---

<div
  class='flex flex-row gap-2 items-center border rounded-full p-1 border-gray-400 dark:border-slate-800'
  '
>
  <button
    data-theme-btn
    class='p-1 rounded-full text-slate-800 dark:text-lavender transition-colors hover:bg-gray-400 dark:hover:bg-slate-800'
    data-theme='system'
    data-active='false'
  >
    <ComputerIcon class='size-4 md:size-5' />
  </button>
  <button
    data-theme-btn
    class='p-1 rounded-full text-slate-800 dark:text-lavender transition-colors hover:bg-gray-400 dark:hover:bg-slate-800'
    data-theme='light'
    data-active='false'
  >
    <SunIcon class='size-4 md:size-5' />
  </button>
  <button
    data-theme-btn
    class='p-1 rounded-full text-slate-800 dark:text-lavender transition-colors hover:bg-gray-400 dark:hover:bg-slate-800'
    data-theme='dark'
    data-active='false'
  >
    <MoonIcon class='size-4 md:size-5' />
  </button>
</div>

<style>
  [data-active='true'] {
    background-color: #9b30ff;
    color: white;
  }
</style>

<script>
  import { $, $$ } from '@/utils/helpers';
  import { getSystemTheme } from '@/utils/system-theme';

  const handlerMap = new WeakMap<HTMLElement, EventListener>();

  function clickHandler(ele: HTMLElement | Element) {
    return () => {
      const target = ele as HTMLButtonElement;
      const { theme = 'dark' } = target.dataset;
      localStorage.setItem('theme', theme);
      updateRender(theme, target);
    };
  }

  function getThemeToApply(theme: string) {
    return theme === 'system' ? getSystemTheme() : theme;
  }

  function init() {
    const theme = localStorage.getItem('theme') ?? 'dark';
    updateRender(theme, $(`[data-theme=${theme}]`)!);
  }

  function updateRender(theme: string, btn: HTMLElement | Element) {
    $$('[data-theme-btn]').forEach((btn) => {
      btn.setAttribute('data-active', 'false');
    });
    btn.setAttribute('data-active', 'true');

    const html = $('html') as HTMLElement;
    html?.setAttribute('class', getThemeToApply(theme));
    html.style.scrollbarColor =
      getThemeToApply(theme) === 'dark' ? '#9b30ff #000000' : '#9b30ff #e5e7eb';
  }

  document.addEventListener('astro:page-load', () => {
    init();
    $$('[data-theme-btn]').forEach((btn) => {
      const ele = btn as HTMLButtonElement;
      const handler = clickHandler(ele);
      handlerMap.set(ele, handler);
      ele.addEventListener('click', handler);
    });
  });

  document.addEventListener('astro:before-swap', () => {
    $$('[data-theme-btn]').forEach((btn) => {
      const ele = btn as HTMLButtonElement;
      const handler = handlerMap.get(ele);
      if (!handler) return;
      ele.removeEventListener('click', handler);
    });
  });
</script>
